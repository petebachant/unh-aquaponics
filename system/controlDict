/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pisoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         20; //200

deltaT          1;

writeControl    timeStep; //timeStep

writeInterval   10;

purgeWrite      0;

writeFormat     ascii;

writePrecision   8;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

libs  (
      "libutilityFunctionObjects.so"
      );

functions
{
    streamLines
    {
        type            streamLine;
        enabled         on;

        // Where to load it from (if not already in solver)
        functionObjectLibs ("libfieldFunctionObjects.so");

        // Output every
        outputControl   outputTime;
        // outputInterval 10;

        setFormat       csv; //gnuplot, raw etc. See sampleDict.

        // Velocity field to use for tracking.
        UName U;

        // Interpolation method. Default is cellPoint. See sampleDict.
        //interpolationScheme pointMVC;

        // Tracked forwards (+U) or backwards (-U)
        trackForward    true;

        // Names of fields to sample. Should contain above velocity field!
        fields (p U);

        // Steps particles can travel before being removed
        lifeTime        10000;

        //- Specify either absolute length of steps (trackLength) or a number
        //  of subcycling steps per cell (nSubCycle)

            // Size of single track segment [m]
            //trackLength 1e-3;

            // Number of steps per cell (estimate). Set to 1 to disable
            // subcycling.
            nSubCycle 5;

        // Cloud name to use
        cloudName       particleTracks;

        // Seeding method. See the sampleSets in sampleDict.
        seedSampleSet   uniform;  //cloud;//triSurfaceMeshPointSet;

        uniformCoeffs
        {
            type        uniform;
            axis        xyz;  //distance;

            start (0 .1651 .2286);
	          end (.1651 .1651 0);
	          nPoints 100;
        }
    }

    dyeTransport
    {
        type            scalarTransport;
        functionObjectLibs ("libutilityFunctionObjects.so");
        outputControl   outputTime;
        resetOnStartUp  false;
        autoSchemes     true;
        fvOptions
        {
            S-01
            {
                type scalarExplicitSetValue;
                active true;
                selectionMode cellZone;
                cellZone sampleInlet;
                scalarExplicitSetValueCoeffs
                {
                    injectionRate
                    {
                        S 1;
                    }
                }
            }
        }
    }
}

// ************************************************************************* //
